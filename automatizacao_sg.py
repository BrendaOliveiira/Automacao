# -*- coding: utf-8 -*-
"""Automatizacao_SG.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gIZHqbQr4gy5z2Q7yXKBa0Rg0jKAd_Fe
"""

import pandas as pd

!pip install openpyxl

"""df.to_excel('nome_do_arquivo.xlsx', index=False) é a função para exportar os dados tratados para o excel.
Substituir 'nome_do_arquivo' pelo nome desejado
"""

df_base = pd.read_excel('/content/Base Global Consolidada.xlsx', sheet_name="Novembro")
df_base

df_base = df_base.drop(columns=['NOME EMPRESA','CNPJ EMPRESA','SIGLA', 'UF LOCAL', 'DESCRIÇÃO CENTRO DE CUSTO', 'ID DUPLICADO','IDADE','GERAÇÃO','FAIXA ETÁRIA', 'RAÇA','DESCRIÇÃO PCD','FORMAÇÃO','EXPATRIADO','PRIMEIRA ADMISSÃO','DATA DO DESLIGAMENTO', 'MOTIVO DO DESLIGAMENTO', 'TEMPO DE EMPRESA (ANOS)', 'FAIXA DE TEMPO DE EMPRESA','CARGO DE LIDERANÇA', 'NÍVEL DO CARGO', 'CARGO_TIPO', 'BP FAZ GESTÃO']).copy()
df_base

df_base = df_base.rename(columns={'ID ÚNICO':'USERID','STATUS':'CUSTOM08','GÊNERO':'GENDER','E-MAIL':'EMAIL','DIRETORIA':'LOCATION','ÁREA':'DEPARTMENT','CENTRO DE CUSTO':'CUSTOM01','GESTOR IMEDIATO':'MANAGER','ESCRITÓRIO/OBRA':'ADDR1','MATRÍCULA':'EMPID','DATA DE NASCIMENTO':'CUSTOM13','NACIONALIDADE':'CUSTOM04','DATA DE ADMISSÃO':'HIREDATE','CARGO':'TITLE','CATEGORIA':'CUSTOM02','CONSULTOR DE GENTE':'HR','GRUPO':'DIVISION'}).copy()
df_base

df_base[['FIRSTNAME','LASTNAME']] = df_base['NOME'].str.split(' ', 1, expand=True)
df_base

df_base['STATUS'] = 'Active'
df_base

nova_ordem_colunas = ['STATUS','USERID','FIRSTNAME','LASTNAME','GENDER','EMAIL','MANAGER','HR','DIVISION','DEPARTMENT','LOCATION','HIREDATE','EMPID','TITLE']
df_base = df_base.reindex(columns=nova_ordem_colunas)
df_base

df_base['MANAGER'] = df_base['MANAGER'].str.split().str[0]
df_base

df_base = df_base[df_base['DIVISION'] == 'CONSAG']
df_base

df_base['Check_Manager'] = df_base['MANAGER'].isin(df_base['USERID'])
df_base['Check_Manager'] = df_base['Check_Manager'].map({True:'Ativo',False:'Desligado'}).copy()
df_base

df_base_manager_desligado = df_base[df_base['Check_Manager'] == 'Desligado']
df_base_manager_desligado

df_base_manager_desligado.to_excel('Gestor Desligado.xlsx', index=False)